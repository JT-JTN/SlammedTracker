@page "/customers/add"
@inject NavigationManager NavigationManager
@inject HttpClient _httpClient
@inject ILogger<CustomerAddView> _logger


<div class="container">
    <div class="flex-d">
        <h3>Add Customer</h3> <button class="btn btn-danger" @onclick="@(() => NavigationManager.NavigateTo("/customers"))">Return To Customer List</button>
        @if (errorMessage is not null)
        {
            <div class="alert alert-danger" role="alert">
                <p>@errorMessage</p>
            </div>
        }
    </div>
    <div class="flex mt-4">
        <EditForm Model="customer" OnValidSubmit="AddCustomer" Enhance="true" FormName="add-customer" class="form-floating" >
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group mt-2">
                <label for="FirstName">First Name</label>
                <InputText id="FirstName" class="form-control" @bind-Value="customer.FirstName" tabindex="0"/>
                <ValidationMessage For="() => customer.FirstName" class="alert-danger" role="alert" />
            </div>
            <div class="form-group mt-2">
                <label for="LastName">Last Name</label>
                <InputText id="LastName" class="form-control" @bind-Value="customer.LastName" />
                <ValidationMessage For="() => customer.LastName" class="alert-danger" role="alert" />
            </div>
            <div class="form-group mt-2">
                <label for="EmailAddress">Email Address</label>
                <InputText id="EmailAddress" class="form-control" @bind-Value="customer.EmailAddress" />
                <ValidationMessage For="() => customer.EmailAddress" class="alert-danger" role="alert" />
            </div>
            <div class="form-group mt-2">
                <input class="form-check-input" type="checkbox" value="" id="IsBusinessCustomer" @bind="customer.IsBusinessCustomer" />
                <label class="form-check-label" for="IsBusinessCustomer">
                    Business Customer
                </label>
            </div>
            <div class="form-group mt-2">
                &nbsp;
                <button class="btn btn-primary" type="submit">Add Customer</button> &nbsp;
                <button class="btn btn-secondary" type="reset">Clear Form</button>
            </div>
        </EditForm>
    </div>
    
</div>

@code {
    private CustomerAddDto customer { get; set; } = new CustomerAddDto();
    private string? errorMessage;

    private async Task AddCustomer()
    {
        try
        {
            var response = await _httpClient.PostAsJsonAsync("api/customers", customer);
            if (response.IsSuccessStatusCode)
            {
                NavigationManager.NavigateTo("/customers");
            }
            else
            {
                errorMessage = "Failed to add customer";
            }
        }
        catch (Exception ex)
        {
            _logger.LogCritical("Error Adding Customer: {ex} | {ex.Message}", ex, ex.Message);
            errorMessage = $"An unexpected error occurred: Server Error. Please Contact Your Administrator.";
        }
    }
}
